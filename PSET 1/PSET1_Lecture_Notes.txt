Harvard CS50 - Week 1 lecture notes
https://www.youtube.com/watch?v=3K4jWlpR4iY&feature=youtu.be

C
Sample code:
#include <stdio.h>

int main(void) = “when flag is clicked”
while (true) = “forever”
for (int i = 0; i < 50; i++) = 50 times
{
	printf(“hello world\n”);
}	

“\n means “put a new line”
#stdio.h = “standard input”

IDE = Integrated Development Environment
	-CS50 IDE (“cs50.io”)

“Source code” = code we write
“Machine code” = code that computers reads
“Source code” -> compiler -> “machine code”

Saving files in C:
	-End with extension .c

!IMPORTANT
Clang runs the compiler in C.
	$ clang hello.c
Running a C file called hello.c would be ran like this in the terminal:
	$ ./a.out

Making a new file with the same output under a new name (a copy essentially)
	$ clang -o hello hello.c
	* new output file would be called “hello”



A helpful list of C commands:

get_char
get_double
get_float
get_int
get_long_long
get_string

Example one:

	int main(void) 
{
	string_s = get_string(“Name”);
	printf(“hello, %s\n”, s);
}

Example two:

int main(void)
{
  int i = get_int ("Integer: ");
  print ("Hello, %i\n");
}

$ make int shows list of commands 
$ don't forget Clang

Example two DOES NOT WORK because the library has to be imported at the top of the file like this: 

#include <cs50.h>
#include <stdio.h>

int main(void)
{
  int i = get_int ("Integer: ");
  printf ("Hello, %i\n, i");
}

run $ .\ints
		$ make ints (compiles)
		
// from here, I downloaded the source code. look there for examples.

"float" refers to floating point arithmetic. It can be used to replace int.

Data types so far: int, string, float

compile with $./floats

char operator: see noswitch.c
	-make a note of ' ' versus " "
	-This can mess up your program
	-"or" in C is ||

next example: return.c
	-use int square as a prototype
	
NOTES ABOUT SHORTS

COMMAND LINE
	cp (copy)
		-Takes two arguments: source and destination
		-i.e. cp hello.txt hi.txt
	rm -r (directory)
		-This deletes a directory
	rm -rf (directory)
		-Recursively, forcefully deletes a directory. VERY DANGEROUS don't use this unless you know for sure that you want to destroy it. 
	
DATA TYPES
	-int (integer)
	-char (character)
	-float (floating points numbers)
		-also known as "real numberts"
	-double (store floating-point values)
		-Super precise with decimal points (lets decimal place get drawn out further)
	-void
		-doesn't return a value
		-i.e. printf
	-bool
	-string

	int number; // declaration
	number = 17; // assignemnt
	
	char letter; // declaraction
	letter = "H"; // assignment
	
OPERATORS	
	Arithmetic Operators
		-int x = y + 1;
		x = x * 5
		-int m = 13 & 4 // m is now 1
		
	Boolean expressions
		-In C, every nonzero value is true and zero is false
		-Two main types of boolean expressions: logical operators and relational operators
			-Logical AND (&&) 
			-Logical OR (||)
			
	Relational Operators
		-< / <=
		-> / >=
		-==
		-!=
		
CONDITIONAL STATEMENTS	
	if { // boolean expression
	
	}
	else { // else statement
	
	}
	
	Switch - permits enumeration of discrete cases instead of relying on boolean expressions
	
	int x = GetInt();
	switch(x)
	{
		case1:
		printf("One|\m");
		break;
		
		case2:
		printf("Two|\n");
		break;
		
		default:
		printf("Sorry!\n");
	}
	
	The "breaks" are important because you will "fall through" each case
	
	?:
		use ?: to replace very simple if-else to make your code look fancy
	
LOOPS
"While" loop
	while (boolean-expr) {
	
	}
	
"Do" loop
	do
	{
	
	}
	while (boolean-expr);
	
"For" loop
	for (int i = 0; i < 10; i++)
	{
	
	}
	for (start; expr; increment;)

Use cases
	whle 
		-use when you want a loop to repeat an unknown number of times, and possibly not at all
	do-while
		-Use when you want a loop to repeat an unknown number of times, but at least once
	for
		-Use when you want a loop to repeat a discrete number of times, though you may not know the number at the moment the program is compiled
		
TIME TO MOVE ON TO PSET1
	
	





